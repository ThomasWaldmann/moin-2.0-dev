MoinMoin Storage Version History
========================

Version 2.0:

  Removed Features:
  * Old-style storage of wiki contents as used in MoinMoin up to Version 1.9.
  * Page and PageEditor are deprecated.
  * AttachFile (and special-casing of attachments in general) is gone.
  * The 'revert' and 'delete' ACL privileges are gone.
  * Old-style deletion of pages and attachments is gone.
  * Underlay is gone.

  New Features:
  * HINT: We now require Python 2.5. If you only have Python 2.4, please use MoinMoin 1.9.x.
  * Possibility to choose between (potentially) many forms of data storage.
  * Possibility to mount different kinds of backends at arbitrary points in the namespace.
  * Possibility to protect each backend's content with different ACLs.
  * Possibility to easily write new backends. (SQL, Usage of Googles appengine, etc.)
  * New-style filesystem backend to store data on disk.
  * Mercurial backend, that allows storing a wiki's contents with the mercurial dvcs.
  * Pages, attachments and users are now uniformly stored within those backends as 'items'.
  * Attachments are accessible via wiki.example.com/mypage/myattachment
  * Possibility to easily switch between different backends (clone script).
  * Possibility to serialize and unserialize a complete wiki with XML.
  * Instead of underlay, we now use serialized items and load them into the storage backend directly.
  * 'create' ACL privilege, granting permission to create a new item.
  * 'destroy' ACL privilege, granting permission to completely erase an item (irreversibly) from storage. 
  * A new trashbin with an own namespace like 'Trash/' where all deleted items end up.
  * Common mimetype-based UI for all kinds of items.

  Developer notes:
  * All test cases (not only classes) now have their own request object with a fresh in-memory storage backend.
    If your tests need content to be present in the backend already, you can provide a config at class level and
    preload your data from an XML file (preloading is done per testcase).

